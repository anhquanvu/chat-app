# Chat Application - Main Configuration
server:
  port: 8080
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: chat-app
  # Task Configuration
  task:
    execution:
      pool:
        core-size: 4
        max-size: 16
        queue-capacity: 500
      thread-name-prefix: "spring-async-"
      shutdown:
        await-termination: true
        await-termination-period: 30s

  # Database Configuration
  datasource:
    url: jdbc:mysql://localhost:3306/chatapp?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      pool-name: ChatAppHikariCP
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        rewriteBatchedStatements: true

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
      session:
        events:
          log:
            LOG_QUERIES_SLOWER_THAN_MS: 25
      collection:
        lazy_loading_threshold: 3
        temp:
          use_jdbc_metadata_defaults: false
      cache:
        use_second_level_cache: true
        use_query_cache: true
        region:
          factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 25
          fetch_size: 50
        order_inserts: true
        order_updates: true
        connection:
          provider_disables_autocommit: true
        # Connection pool logging
        hikari:
          connectionTestQuery: SELECT 1
    open-in-view: false

  # Disable Flyway
  flyway:
    enabled: false

  # Redis Configuration (commented out if not using Redis)
  # data:
  #   redis:
  #     host: localhost
  #     port: 6379
  #     password:
  #     timeout: 2000ms
  #     lettuce:
  #       pool:
  #         max-active: 20
  #         max-idle: 10
  #         min-idle: 2
  #         max-wait: 2000ms

  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB
      enabled: true
      file-size-threshold: 2KB

  # Jackson Configuration
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    time-zone: UTC

# Application Specific Configuration
app:
  # JWT Configuration
  jwt:
    secret: mySecretKey123456789012345678901234567890abcdefghijklmnopqrstuvwxyz
    expiration: 3600 # 1 hour in seconds
    refresh-expiration: 86400 # 24 hours in seconds

  # CORS Configuration
  cors:
    allowed-origins: http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

  # WebSocket Configuration
  websocket:
    allowed-origins: http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000

  # Cache Configuration
  cache:
    default-ttl: 600 # 10 minutes
    user-cache-ttl: 1800 # 30 minutes
    message-cache-ttl: 3600 # 1 hour

  # Rate Limiting Configuration
  rate-limiting:
    enabled: false # Disabled temporarily as it depends on Redis
    requests-per-minute: 60
    requests-per-hour: 1000
    burst-capacity: 10

  # File Storage Configuration
  storage:
    upload-dir: ./uploads
    max-file-size: 52428800 # 50MB in bytes
    allowed-types: image/,video/,audio/,application/pdf,application/msword,application/vnd.openxmlformats-officedocument

  # Encryption Configuration
  encryption:
    enabled: false
    secret-key: # Will be generated if empty

  # Security Configuration
  security:
    password-strength: 6 # Minimum password length
    max-login-attempts: 5
    lockout-duration: 900 # 15 minutes in seconds

# Enhanced Logging Configuration
logging:
  level:
    root: INFO
    com.revotech.chatapp: DEBUG
    com.revotech.chatapp.util.WebSocketSafeBroadcast: INFO
    org.springframework.messaging: WARN
    org.springframework.web.socket: WARN
    # Database and Connection Pool Logging
    com.zaxxer.hikari: INFO
    com.zaxxer.hikari.HikariConfig: DEBUG
    com.zaxxer.hikari.HikariDataSource: INFO
    org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl: WARN
    org.hibernate.orm.connections.pooling: INFO
    org.hibernate.SQL: OFF
    org.hibernate.type.descriptor.sql.BasicBinder: OFF
    # Security Logging
    org.springframework.security: DEBUG
    com.revotech.chatapp.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/chatapp.log
    max-size: 100MB
    max-history: 30

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,configprops,env
  endpoint:
    health:
      show-details: when-authorized
    configprops:
      show-values: when-authorized

# Spring Doc OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  default-consumes-media-type: application/json
  default-produces-media-type: application/json